% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/translate.R
\name{translate}
\alias{translate}
\title{Translate Text}
\usage{
translate(
  ...,
  lang = language_get(),
  tr = translator(),
  source_lang = language_source_get()
)
}
\arguments{
\item{...}{Any number of vectors containing \link{atomic} elements. Each vector
is normalized as a paragraph.
\itemize{
\item Elements are coerced to character values.
\item \link[base:NA]{NA} values and empty strings are discarded.
\item Multi-line strings are supported and encouraged. Blank lines are
interpreted (two or more newline characters) as paragraph separators.
}}

\item{lang}{A non-empty and non-\link[base:NA]{NA} character string. The
underlying language.

A language is usually a code (of two or three letters) for a native
language name. While users retain full control over codes, it is best
to use language codes stemming from well-known schemes such as
\href{https://en.wikipedia.org/wiki/IETF_language_tag}{IETF BCP 47}, or
\href{https://en.wikipedia.org/wiki/List_of_ISO_639_language_codes}{ISO 639-1}
to maximize portability and cross-compatibility.}

\item{tr}{A \code{\link{Translator}} object.}

\item{source_lang}{A non-empty and non-\link[base:NA]{NA} character string. The
language of the (untranslated) source text. See argument \code{lang} for more
information.}
}
\value{
A character string, or \code{NULL} if the underlying translation is unavailable.
}
\description{
Translate source text.
}
\details{
Input text can written in a variety of ways using single-line and multi-line
strings. Values passed to \code{...} are normalized (to ensure their consistency)
and collapsed to a single character string using the standard paragraph
separator. The latter is defined as two newline characters (\code{"\\n\\n"}).
\enumerate{
\item \link[base:NA]{NA} values and empty strings are discarded before reducing
the elements to a character string.
\item Whitespaces (tabs, newlines, and repeated spaces) characters are
replaced by a single space. Paragraph separators are preserved.
\item Leading or trailing whitespaces are stripped.
}
}
\examples{
# Set source language.
language_source_set("en")

# Create a Translator object.
# This would normally be done automatically
# by find_source(), or translator_read().
tr <- translator(
  id = "test-translator",
  en = "English",
  fr = "FranÃ§ais",
  text(
    en = "Hello, world!",
    fr = "Bonjour, monde!"),
  text(
    en = "Farewell, world!",
    fr = "Au revoir, monde!"))

# Set current language.
language_set("fr")

# Request translations.
translate("Hello, world!")                           ## Outputs "Bonjour, monde!"
translate("Farewell, world!", lang = "fr", tr = tr)  ## Outputs "Au revoir, monde!"
translate("Hello, world!",    lang = "en", tr = tr)  ## Outputs "Hello, world!"

}
\seealso{
\code{\link{Translator}},
\code{\link[=language_set]{language_set()}}
}
