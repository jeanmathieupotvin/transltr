% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils-format-vector.R
\name{format_vector}
\alias{format_vector}
\title{Format Vectors}
\usage{
format_vector(
  x = vector(),
  label = NULL,
  level = 0L,
  indent = 1L,
  add_names = FALSE,
  validate = TRUE
)
}
\arguments{
\item{x}{A \link[=vector]{vector}. It cannot be empty.}

\item{level}{A non-\link[base:NA]{NA} integer value. The current nesting level
in recursive calls to \code{\link[=format_vector]{format_vector()}}. \strong{It is not validated for
efficiency.}}

\item{indent}{A non-\link[base:NA]{NA} integer value. Number of space characters
to use by \code{levels} for indentation purposes. \strong{It is not validated for
efficiency.}}

\item{top_label}{A \code{NULL} or a non-empty and non-\link[base:NA]{NA} character
string used as some kind of descriptive message. Its exact meaning depends
on the underlying context. In recursive calls to \code{\link[=format_vector]{format_vector()}}, this
is set equal to the name of the current element of \code{x}. \strong{It is not
validated for efficiency.}}

\item{show_nokey}{A non-\link[base:NA]{NA} logical value. Should \code{NULL} and/or
empty names be replaced by \code{"<nokey>"}? \strong{It is not validated for
efficiency.}}
}
\value{
A character vector.
}
\description{
Format atomic \link[=vector]{vectors} and/or \emph{recursive} structures such as
\link[=list]{lists}.
}
\details{
The intent of \code{\link[=format_vector]{format_vector()}} is to format any \link[=vector]{vector} into a
set of name/value pairs (given as character strings), where indentation
provides information on embedded structures. The following template shows
how it attempts to format \code{x}.

\if{html}{\out{<div class="sourceCode">}}\preformatted{<top_label>:
  <names(x[1])>: <x[1]>
  <names(x[2])>: <x[2]>
  <names(x[3])>:
    <names(x[[3]][1])>: <x[[3]][[1]]>
    ...
  <nokey>: <x[i]>
  <nokey>: <x[j]>
  <nokey>:
    <nokey>: <x[[k]][[1]]>
    ...
}\if{html}{\out{</div>}}

Names are used to construct labels. If \code{x[i]} has a name (\code{names(x[i])}
is not \code{NULL}), it is used to construct a label for \code{x[i]}. The format is
equivalent to \code{names(x[i]): as.character(x[i])}. If \code{x[i]} does not have
a name (or if it is empty), \verb{<nokey>} is printed, unless \code{show_nokey} is
\code{FALSE}. See Examples below.
}
\note{
\code{\link[=format_vector]{format_vector()}} is the \emph{workhorse} function of all S3 \code{\link[=format]{format()}} methods:
\code{\link[=format.Translator]{format.Translator()}}, \code{\link[=format.Text]{format.Text()}}, and \code{\link[=format.Location]{format.Location()}}.
}
\examples{
x <- list(
  FirstName = "John",
  LastName  = "Doe",
  Address   = list(
    StreetAddress = "123 Main Street",
    City          = "Montreal",
    Province      = "Quebec",
    PostalCode    = "H0H 0H0"),
  Notes = c(
    "Send mail to",
    "address above."))

cat(transltr:::format_vector(x, "<JohnDoe>"), sep = "\n")
cat(transltr:::format_vector(x, "<JohnDoe>", show_nokey = FALSE), sep = "\n")

}
\seealso{
Other utility functions: 
\code{\link{stops}()},
\code{\link{to_string}()},
\code{\link{vapply_1l}()}
}
\concept{utility functions}
\keyword{internal}
