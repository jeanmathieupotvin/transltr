% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/translator.R
\name{translator_read}
\alias{translator_read}
\alias{translator_write}
\alias{translations_read}
\alias{translations_write}
\title{Read and Write Translations}
\usage{
translator_read(path = getOption("transltr.default.path"), encoding = "UTF-8")

translator_write(x = translator(), path = getOption("transltr.default.path"))

translations_read(path = "", encoding = "UTF-8")

translations_write(x = translator(), path = "", lang = "")
}
\arguments{
\item{path}{A character string. A path to a file to read from, or write to.
Its parent directories are automatically created using \code{\link[=dir.create]{dir.create()}} if
they do not exist.

By default, \code{\link[=translator_read]{translator_read()}}, and \code{\link[=translator_write]{translator_write()}} respectively
reads from, and writes to a default location given by global \R
\link[=options]{option} \code{transltr.default.path}. It points to a standard
\strong{Portable Translator File}. See Details below.}

\item{encoding}{A non-empty and non-\link[base:NA]{NA} character string. The
underlying source character encoding. In almost all cases, this should
be UTF-8. Other encodings are internally re-encoded to UTF-8 for
portability.}

\item{x}{An object of class \code{\link{Translator}}.}

\item{lang}{A non-empty and non-\link[base:NA]{NA} character string. The
requested language.

A language is usually a code (of two or three letters) for a native
language name. For example, \code{ja} is a code for \code{日本語} (Japanese). While
users retain full control over codes, it is best to use language codes
stemming from well-known schemes such as
\href{https://en.wikipedia.org/wiki/IETF_language_tag}{IETF BCP 47}, or
\href{https://en.wikipedia.org/wiki/List_of_ISO_639_language_codes}{ISO 639-1}.
Doing so maximizes portability and cross-compatibility between packages.}
}
\value{
\code{\link[=translator_read]{translator_read()}} returns a \code{\link{Translator}} object. This is
an \code{\link[R6:R6Class]{R6::R6Class()}} instance under the hood.

\code{\link[=translator_write]{translator_write()}} returns \code{NULL}, invisibly. It is used for its
side-effect of creating Portable Translator Files, and Portable Translations
Files.

\code{\link[=translations_read]{translations_read()}} returns an S3 object of class
\code{\link[=portable]{PortableTranslations}}. Consider using \code{\link[=translator_read]{translator_read()}}
instead.

\code{\link[=translations_write]{translations_write()}} returns \code{NULL}, invisibly. It is used for its
side-effect of creating a single Portable Translations File.
}
\description{
Read (import) \emph{Portable Translator Files}, and convert them to
\code{\link{Translator}} objects.

Write (export) \code{\link{Translator}} objects as
\emph{Portable Translators Files}.
}
\details{
A Portable Translator File (PTF) is a human-friendly, cross language,
and textual representation (serialization) of a \code{\link{Translator}}
object and its underlying translations. The format heavily relies on
\href{https://yaml.org/spec/1.1/}{YAML 1.1}, a popular data serialization
format. However, users do not actually have to know anything about YAML
to read, or write \code{\link{Translator}} objects.

Portable Translator Files are snapshots of \code{\link{Translator}}
objects. To ease collaboration and maintenance, translations are grouped
by language, and stored in separate files. These files are always listed
by the \code{translations_files} field of a PTF.

As such, a PTF may refer to a \emph{Portable Translator File}, a
\emph{Portable Translations File}, or both. Portable Translators and Portable
Translations are closely tied by design. It is worthwhile to know that they
both have well-defined internal representations referred to as
\link[=portable]{Portable Objects}.

The easiest way to import translations is to use \code{\link[=translator_read]{translator_read()}}. This
function is designed to read all related PTFs, extract their contents, and
construct a suitable \code{\link{Translator}} object from it. This is the
preferred interface. The same is true for \code{\link[=translator_write]{translator_write()}}.

Users may read, or write individual Portable Translations Files with
\code{\link[=translations_read]{translations_read()}}, and \code{\link[=translations_write]{translations_write()}}, respectively. This
can be useful for debugging purposes.
\subsection{Encodings}{

\strong{The preferred encoding is (and should always be) UTF-8.} If another
encoding must be used for some obscure reason, the \code{encoding} argument
has to be updated. Encodings should be known, never inferred.

\code{\link[=translator_write]{translator_write()}}, and \code{\link[=translations_write]{translations_write()}} enforces UTF-8. This
cannot be changed.
}
}
\seealso{
\code{\link{Translator}},
\code{\link[=portable]{Portable}},
\href{https://en.wikipedia.org/wiki/UTF-8}{UTF-8}
}
