% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/class-block.R
\name{new_block}
\alias{new_block}
\alias{Block}
\alias{is_block}
\title{Translations blocks}
\usage{
new_block(hash = "", translations = character())

is_block(x)
}
\arguments{
\item{hash}{A non-empty and non-\link[base:NA]{NA} character string. This is
typically a reproducible hash generated by a known
\link[=get_hash_algorithms]{hashing algorithm} from the source text (as it
appears in source scripts).}

\item{translations}{A non-empty named character vector of non-\link[base:NA]{NA}
values. The names state to which languages they correspond. Users have
full control over the names and are free to use whatever they want. Since
they do not need to represent the full name of a language, names are
referred to as \emph{language keys}. See Examples below.}
}
\value{
\code{\link[=new_block]{new_block()}} returns a list of length 2 of class \link{Block} and containing
these two elements: the values of \code{hash} and \code{translations}.

\code{\link[=is_block]{is_block()}} returns a logical.
}
\description{
The \code{\link{Block}} class is an internal class that encapsulates a
collection of translations of the same source text identified by a
reproducible hash.
}
\note{
\code{\link[=new_block]{new_block()}} does not generate hashes. This must be done before creating
instances of the class.
}
\examples{
source_text <- "Hello, world!"

## This is just a dummy example and not truly a hash per se.
hash <- source_text |>
    paste0(collapse = " ") |>
    charToRaw() |>
    paste0(collapse = "")

translations <- c(
    fr        = "Bonjour le monde!",
    es        = "¡Hola Mundo!",
    `jp-utf8` = "こんにちは世界！")

my_block <- transltr:::new_block(hash, translations)

}
\keyword{internal}
