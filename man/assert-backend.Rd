% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/assert.R
\name{assert-backend}
\alias{assert-backend}
\alias{.assertN}
\alias{.assertNonEmpty}
\alias{.assertScalar}
\title{Create assertions}
\usage{
.assertN(
  x,
  n = integer(1L),
  na = FALSE,
  type = character(1L),
  is = is(),
  name = deparse(substitute(x))
)

.assertNonEmpty(
  x,
  na = FALSE,
  type = character(1L),
  is = is(),
  name = deparse(substitute(x))
)

.assertScalar(
  x,
  na = FALSE,
  type = character(1L),
  is = is(),
  name = deparse(substitute(x))
)
}
\arguments{
\item{x}{An \R object to be tested.}

\item{n}{An integer value greater than or equal 0. The expected length
of \code{x}.}

\item{na}{A logical value. Can \code{x} contain \link[base:NA]{NA} value(s)?}

\item{type}{A character string. The name of the expected
\link[base:typeof]{type}, \link[base:class]{class}, or shape of \code{x}. It is
used to construct meaningful error messages if \code{x} is not of the given
\code{type}.}

\item{is}{An introspector function that returns a single logical value.
It is used to assess whether \code{x} is of the given \code{type}. It must accept
a single argument.

\if{html}{\out{<div class="sourceCode">}}\preformatted{function(x) \{ return(logical(1L)) \}
}\if{html}{\out{</div>}}}

\item{name}{A character string. A value representing \code{x} that is used to
construct meaningful error messages. By default, this corresponds to the
underlying \link[base:name]{symbol} passed to \code{x}.}
}
\value{
Argument \code{x} is returned invisibly if valid.
}
\description{
For advanced use only. Functions described here are building blocks that
can be used to create further higher-order assertions.
}
\details{
Because \code{\link[=.assertScalar]{.assertScalar()}}, \code{\link[=.assertNonEmpty]{.assertNonEmpty()}}, and \code{\link[=.assertN]{.assertN()}} are meant
to be embedded into other functions by the developers, their arguments are
\strong{not validated} for efficiency. They should be used to create other
\verb{assert*()} functions that are semantic, more specific, and/or more complex.

They differ only by the length they expect.
\itemize{
\item \code{\link[=.assertN]{.assertN()}} enforces a specific length, \code{n}, which can be 0,
\item \code{\link[=.assertNonEmpty]{.assertNonEmpty()}} enforces any non-zero length, and
\item \code{\link[=.assertScalar]{.assertScalar()}} enforces a length equal to \code{1} (scalar value).
}
}
\seealso{
Other assertions: 
\code{\link{assert}}
}
\author{
Jean-Mathieu Potvin (\href{mailto:jm@potvin.xyz}{jm@potvin.xyz})
}
\concept{assertions}
\keyword{internal}
