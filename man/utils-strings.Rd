% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils-strings.R
\name{str_to}
\alias{str_to}
\alias{str_to.default}
\alias{str_trim}
\title{Character String Utilities}
\usage{
str_to(x, ...)

\method{str_to}{default}(x, quote_values = FALSE, last_sep = ", or ", ...)

str_trim(x = character(), width = 80L)
}
\arguments{
\item{x}{Any \R object for \code{\link[=str_to]{str_to()}}. A character vector for \code{\link[=str_trim]{str_trim()}}.}

\item{...}{Further arguments passed to, or from other methods.}

\item{quote_values}{A non-\link[base:NA]{NA} logical value. Should elements of
\code{x} be quoted?}

\item{last_sep}{A non-empty and non-\link[base:NA]{NA} character string
separating the last element from the penultimate one.}

\item{width}{A non-\link[base:NA]{NA} integer value. The target width for
individual elements of \code{x}. It takes 3 more characters into account
for the \code{...} suffix.}
}
\value{
\code{\link[=str_to]{str_to()}} returns a character string.

\code{\link[=str_trim]{str_trim()}} returns a character vector having the same length as \code{x}.
}
\description{
\code{\link[=str_to]{str_to()}} converts an \R object to a character string. It is a slightly
more flexible alternative to \code{\link[base:toString]{base::toString()}}.

\code{\link[=str_trim]{str_trim()}} wraps \code{\link[base:strtrim]{base::strtrim()}} and further adds a \code{...} suffix to
each trimmed element.
}
\details{
\code{\link[=str_to]{str_to()}} concatenates all elements with \code{", "}, except for the last
one. See argument \code{last_sep}.
}
\examples{
transltr:::str_to(c(1L, 2L, 3L))            ## Outputs "1, 2, or 3"
transltr:::str_to(letters, TRUE)            ## Outputs "'a', 'b', 'c', ..., or 'z'"
transltr:::str_to(letters, TRUE, ", and ")  ## Outputs "'a', 'b', 'c', ..., and 'z'"

x <- strrep("a", 200L)

# x is reduced to a width of 80 characters (by default). This includes 3
# characters for the '...' suffix added and therefore, x is reduced to 77
# chars. The same logic is applied  for any width strictly greater than 2.
transltr:::str_trim(x)

}
\seealso{
Other utility functions: 
\code{\link{format_vector}()},
\code{\link{stops}()},
\code{\link{vapply_1l}()}
}
\concept{utility functions}
\keyword{internal}
