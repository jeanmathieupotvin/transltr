% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/class-translator.R
\name{translator}
\alias{translator}
\alias{is_translator}
\alias{format.Translator}
\alias{print.Translator}
\alias{Translator}
\title{Source Texts and Translations}
\usage{
translator(..., id = uuid(), hash_algorithm = get_hash_algorithms())

is_translator(x)

\method{format}{Translator}(x, ...)

\method{print}{Translator}(x, ...)
}
\arguments{
\item{...}{Usage depends on the underlying function.
\itemize{
\item Any number of \code{\link{Block}} objects, and/or named character
strings for \code{\link[=translator]{translator()}} (in no preferred order).
\item Further arguments passed to or from other methods for \code{\link[=format]{format()}},
and \code{\link[=print]{print()}}.
}}

\item{id}{A non-empty and non-\link[base:NA]{NA} character string. A globally
unique identifier for the underlying object. Beware of plausible
collisions when using user-defined values.}

\item{hash_algorithm}{A character string equal to one of the values returned
by \code{\link[=get_hash_algorithms]{get_hash_algorithms()}}. The algorithm to use when hashing source
information for identification purposes.}

\item{x}{Any \R object.}
}
\value{
\code{\link[=translator]{translator()}} returns an \code{\link[R6:R6Class]{R6}} object of class
\code{\link{Translator}}.

\code{\link[=is_block]{is_block()}} returns a logical value.

\code{\link[=format]{format()}} returns a character vector.

\code{\link[=print]{print()}} returns argument \code{x} invisibly.
}
\description{
Store, structure, and manipulate source text\strong{s} and their translations.
}
\details{
A \code{\link{Translator}} object is a collection of many source texts,
and related translations. It exposes a set of methods that can be used to
safely manipulate the information it contains. Since \code{\link[=translator]{translator()}} sets
all required parameters at inception, it can be ignored most of the time.

It is worthwhile to note that internally, \code{\link{Translator}} objects
are collections of \code{\link{Block}} objects. Blocks are similar to
Translators, but stores a single source text and their translations. They
are also somewhat lower-level, and in typical situations, users do not
directly interact with them.
\subsection{Translating Text}{

Since it can be detected and processed by \code{\link[=find_translations]{find_translations()}}, it is
recommended to use \code{\link[=translate]{translate()}} at all times. Method
\code{\link[=Translator]{Translator$translate()}} is the underlying workhorse function
called by the former.
}
}
\examples{
## Create a Translator manually.
translator(
    id = "test-translator",
    en = "English",
    fr = "Français",
    block("en",
        location("a", 1L, 2L, 3L, 4L),
        en = "Hello, world!",
        fr = "Bonjour, monde!"),
    block("en",
        location("b", 5L, 6L, 7L, 8L),
        en = "Farewell, world!",
        fr = "Au revoir, monde!"))


## ------------------------------------------------
## Method `Translator$set_blocks`
## ------------------------------------------------

## Create Block objects.
blk1 <- block("en",
    location("a", 1L, 2L, 3L, 4L),
    en = "Hello, world!",
    fr = "Bonjour, monde!")
blk2 <- block("en",
    location("b", 5L, 6L, 7L, 8L),
    en = "Farewell, world!",
    fr = "Au revoir, monde!")

## Create a new Translator and register them.
trans <- Translator$new()
trans$set_blocks(blk1, blk2)

## ------------------------------------------------
## Method `Translator$set_native_languages`
## ------------------------------------------------

trans <- Translator$new()
trans$set_native_languages(
    en = "English",
    fr = "Français",
    ja = "日本語")
}
\seealso{
\code{\link[=translate]{translate()}},
\code{\link[=translator_set]{translator_set()}},
\code{\link[=translator_get]{translator_get()}},
\code{\link[=read_translations]{read_translations()}},
\code{\link[=write_translations]{write_translations()}}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{id}}{A non-empty and non-\link[base:NA]{NA} character string. A globally
unique identifier for the underlying object. Beware of plausible
collisions when using user-defined values.}

\item{\code{hash_algorithm}}{A character string equal to one of the values returned
by \code{\link[=get_hash_algorithms]{get_hash_algorithms()}}. The algorithm to use when hashing source
information for identification purposes.}

\item{\code{hashes}}{A character vector of non-empty and non-\link[base:NA]{NA}
values, or \code{NULL}. The set of all \code{hash} exposed by registered
\code{\link{Block}} objects. If there is none, \code{hashes} is \code{NULL}.
This is a \strong{read-only} field. It is automatically updated
whenever field \code{hash_algorithm} is updated.}

\item{\code{source_texts}}{A character vector of non-empty and
non-\link[base:NA]{NA} values, or \code{NULL}. The set of all
\code{source_text} exposed by registered \code{\link{Block}}
objects. If there is none, \code{source_texts} is \code{NULL}.
This is a \strong{read-only} field.}

\item{\code{languages}}{A character vector of non-empty and
non-\link[base:NA]{NA} values, or \code{NULL}. The set of all
\code{languages} (codes) exposed by registered \code{\link{Block}}
objects. If there is none, \code{languages} is \code{NULL}.
This is a \strong{read-only} field.}

\item{\code{native_languages}}{A named character vector of non-empty and
non-\link[base:NA]{NA} values, or \code{NULL}. An optional, but useful map
of \code{languages} (codes) to native language names. Names are codes,
and values are native languages. If there is none,
\code{native_languages} is \code{NULL}.

While users retain full control over \code{native_languages}, it is
best to use well-known schemes such as
\href{https://en.wikipedia.org/wiki/IETF_language_tag}{IETF BCP 47}, or
\href{https://en.wikipedia.org/wiki/List_of_ISO_639_language_codes}{ISO 639-1}.
Doing so maximizes portability and cross-compatibility between packages.

Update this field with method
\code{\link[=Translator]{Translator$set_native_languages()}}. See below for
more information.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Translator-new}{\code{Translator$new()}}
\item \href{#method-Translator-translate}{\code{Translator$translate()}}
\item \href{#method-Translator-get_translation}{\code{Translator$get_translation()}}
\item \href{#method-Translator-get_block}{\code{Translator$get_block()}}
\item \href{#method-Translator-set_block}{\code{Translator$set_block()}}
\item \href{#method-Translator-set_blocks}{\code{Translator$set_blocks()}}
\item \href{#method-Translator-set_native_languages}{\code{Translator$set_native_languages()}}
\item \href{#method-Translator-rm_block}{\code{Translator$rm_block()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Translator-new"></a>}}
\if{latex}{\out{\hypertarget{method-Translator-new}{}}}
\subsection{Method \code{new()}}{
Create a \code{\link{Translator}} object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Translator$new(id = uuid(), hash_algorithm = get_hash_algorithms())}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{A non-empty and non-\link[base:NA]{NA} character string. A globally
unique identifier for the underlying object. Beware of plausible
collisions when using user-defined values.}

\item{\code{hash_algorithm}}{A character string equal to one of the values returned
by \code{\link[=get_hash_algorithms]{get_hash_algorithms()}}. The algorithm to use when hashing source
information for identification purposes.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
An \code{\link[R6:R6Class]{R6}} object of class \code{\link{Translator}}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Translator-translate"></a>}}
\if{latex}{\out{\hypertarget{method-Translator-translate}{}}}
\subsection{Method \code{translate()}}{
Translate text. Consider using \code{\link[=translate]{translate()}} instead
of this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Translator$translate(..., lang = "", concat = " ", source_lang = "en")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Any number of character vectors. The source text to translate.
Values can be empty and/or \link[base:NA]{NA}, but can lead to unexpected
results.}

\item{\code{lang}}{A non-empty and non-\link[base:NA]{NA} character string. The
requested language.

A language is usually a code (of two or three letters) for a native
language name. For example, \code{ja} is a code for \code{日本語} (Japanese). While
users retain full control over codes, it is best to use language codes
stemming from well-known schemes such as
\href{https://en.wikipedia.org/wiki/IETF_language_tag}{IETF BCP 47}, or
\href{https://en.wikipedia.org/wiki/List_of_ISO_639_language_codes}{ISO 639-1}.
Doing so maximizes portability and cross-compatibility between packages.}

\item{\code{concat}}{A non-empty and non-\link[base:NA]{NA} character string used to
concatenate values passed to \code{...}.}

\item{\code{source_lang}}{A non-empty and non-\link[base:NA]{NA} character string. The
language of the (untranslated) source text. See argument \code{lang} for more
information.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
Values passed to \code{...} are first normalized by \code{\link[=text_normalize]{text_normalize()}},
and the resulting string is hashed by \code{\link[=text_hash]{text_hash()}}. Then, the
corresponding translation tied to the \code{hash} and \code{lang} pair is
fetched via method \code{\link[=Translator]{Translator$get_translation()}}.
}

\subsection{Returns}{
A character string, or \code{NULL}. The corresponding translation
in the requested language, or \code{NULL} if none is available.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Translator-get_translation"></a>}}
\if{latex}{\out{\hypertarget{method-Translator-get_translation}{}}}
\subsection{Method \code{get_translation()}}{
Extract a translation, or source texts.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Translator$get_translation(hash = "", lang = "")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{hash}}{A non-empty and non-\link[base:NA]{NA} character string. The
unique identifier of the requested source text, or its underlying
\code{\link{Block}} object.}

\item{\code{lang}}{A non-empty and non-\link[base:NA]{NA} character string. The
requested language.

A language is usually a code (of two or three letters) for a native
language name. For example, \code{ja} is a code for \code{日本語} (Japanese). While
users retain full control over codes, it is best to use language codes
stemming from well-known schemes such as
\href{https://en.wikipedia.org/wiki/IETF_language_tag}{IETF BCP 47}, or
\href{https://en.wikipedia.org/wiki/List_of_ISO_639_language_codes}{ISO 639-1}.
Doing so maximizes portability and cross-compatibility between packages.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A character string. \code{NULL} is returned if the requested
translation is not available (either \code{hash} or \code{lang} is not
registered).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Translator-get_block"></a>}}
\if{latex}{\out{\hypertarget{method-Translator-get_block}{}}}
\subsection{Method \code{get_block()}}{
Extract a \code{\link{Block}} object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Translator$get_block(hash = "")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{hash}}{A non-empty and non-\link[base:NA]{NA} character string. The
unique identifier of the requested source text, or its underlying
\code{\link{Block}} object.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A \code{\link{Block}} object, or \code{NULL}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Translator-set_block"></a>}}
\if{latex}{\out{\hypertarget{method-Translator-set_block}{}}}
\subsection{Method \code{set_block()}}{
Simultaneously create and register a \code{\link{Block}}
object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Translator$set_block(source_lang = "", ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{source_lang}}{Passed as is to \code{\link[=block]{block()}}.}

\item{\code{...}}{Passed as is to \code{\link[=block]{block()}}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A \code{NULL}, invisibly.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Translator-set_blocks"></a>}}
\if{latex}{\out{\hypertarget{method-Translator-set_blocks}{}}}
\subsection{Method \code{set_blocks()}}{
Register one or more \code{\link{Block}} objects.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Translator$set_blocks(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Any number of \code{\link{Block}} objects.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A \code{NULL}, invisibly.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{## Create Block objects.
blk1 <- block("en",
    location("a", 1L, 2L, 3L, 4L),
    en = "Hello, world!",
    fr = "Bonjour, monde!")
blk2 <- block("en",
    location("b", 5L, 6L, 7L, 8L),
    en = "Farewell, world!",
    fr = "Au revoir, monde!")

## Create a new Translator and register them.
trans <- Translator$new()
trans$set_blocks(blk1, blk2)
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Translator-set_native_languages"></a>}}
\if{latex}{\out{\hypertarget{method-Translator-set_native_languages}{}}}
\subsection{Method \code{set_native_languages()}}{
Map a language code to a native language name.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Translator$set_native_languages(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Any number of named, non-empty, and non-\link[base:NA]{NA}
character strings. Names are codes, and values are native
languages. See field \code{native_languages} for more information.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A \code{NULL}, invisibly.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{trans <- Translator$new()
trans$set_native_languages(
    en = "English",
    fr = "Français",
    ja = "日本語")
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Translator-rm_block"></a>}}
\if{latex}{\out{\hypertarget{method-Translator-rm_block}{}}}
\subsection{Method \code{rm_block()}}{
Remove a registered location.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Translator$rm_block(hash = "")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{hash}}{A non-empty and non-\link[base:NA]{NA} character string
identifying the \code{\link{Block}} object to be removed.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A \code{NULL}, invisibly.
}
}
}
