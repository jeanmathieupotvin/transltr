% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils-map.R
\name{map}
\alias{map}
\alias{vapply1l}
\alias{vapply1i}
\alias{vapply1c}
\title{Map function to values}
\usage{
map(fun, ..., moreArgs = list())

vapply1l(x, fun, ...)

vapply1i(x, fun, ...)

vapply1c(x, fun, ...)
}
\arguments{
\item{fun}{a function to be applied on each element of \code{x}. See argument
\code{FUN} of \code{\link[base:mapply]{base::mapply()}} and/or \code{\link[base:lapply]{base::vapply()}}.}

\item{...}{optional arguments to \code{fun}.}

\item{moreArgs}{passed to argument \code{MoreArgs} of \code{\link[base:mapply]{base::mapply()}}.}

\item{x}{passed to argument \code{X} of \code{\link[base:lapply]{base::vapply()}}.}
}
\value{
\itemize{
\item \code{\link[=map]{map()}} returns a list having the same length as values passed to \code{...}
\item \code{\link[=vapply1l]{vapply1l()}} returns a logical vector having the same length as \code{x}.
\item \code{\link[=vapply1i]{vapply1i()}} returns an integer vector having the same length as \code{x}.
\item \code{\link[=vapply1c]{vapply1c()}} returns a character vector having the same length as \code{x}.
}
}
\description{
\code{\link[=map]{map()}}, \code{\link[=vapply1i]{vapply1i()}}, and \code{\link[=vapply1c]{vapply1c()}} respectively wrap \code{\link[base:mapply]{base::.mapply()}}
and \code{\link[base:lapply]{base::vapply()}}. Their purpose is to enforce specific arguments.
}
\author{
Jean-Mathieu Potvin (\href{mailto:jeanmathieupotvin@ununoctium.dev}{jeanmathieupotvin@ununoctium.dev})
}
\keyword{internal}
