% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils-stopf.R
\name{stopf}
\alias{stopf}
\title{Internal tools: throw errors}
\usage{
stopf(..., .concat = " ", .args = list())
}
\arguments{
\item{...}{values to be assembled into a single error message. They may
contain conversion specifications. See Details of \code{\link[base:sprintf]{base::sprintf()}}.}

\item{.concat}{a character string used to concatenate values passed to \code{...}}

\item{.args}{a list containing values to be used to format an error message.
Passed to argument \code{...} of \code{\link[base:sprintf]{base::sprintf()}}.}
}
\value{
Nothing. \code{\link[=stopf]{stopf()}} is used for its side-effect.
}
\description{
Format an error message and throw an error by combining \code{\link[base:sprintf]{base::sprintf()}}
and \code{\link[base:stop]{base::stop()}}. It should not be used by end users. This documentation
is intended for developers.
}
\details{
Since they can be be validated at edit time using appropriate unit tests,
arguments \code{.concat} and \code{.args} are \strong{not} validated at runtime.

Values passed to \code{...} are first combined into a single vector with
\code{\link[base:c]{base::c()}}, then coerced to a character implicitly by \code{\link[base:paste]{base::paste0()}}
before being concatenated.
}
\examples{
\dontrun{

stopf("this is a \%s", "error", "\%s.", .args = list("useful", "message"))
## Error: this is a useful error message.
}

}
\seealso{
Other internal tools: 
\code{\link{isSingleChar}()},
\code{\link{map}()}
}
\author{
Jean-Mathieu Potvin (\href{mailto:jeanmathieupotvin@ununoctium.dev}{jeanmathieupotvin@ununoctium.dev})
}
\concept{internal tools}
\keyword{internal}
