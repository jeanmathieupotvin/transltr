% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{stopf}
\alias{stopf}
\alias{map}
\alias{vapply1i}
\alias{vapply1c}
\alias{\%||\%}
\title{Internal tools}
\usage{
stopf(fmt = character(), ...)

map(fun, ..., moreArgs = list())

vapply1i(x, fun, ...)

vapply1c(x, fun, ...)

lhs \%||\% rhs
}
\arguments{
\item{fmt}{passed to function \code{\link[base:sprintf]{base::sprintf()}}. It is concatenated into
a single string before.}

\item{...}{passed to further function(s).}

\item{fun}{passed to argument \code{FUN} of \code{\link[base:mapply]{base::mapply()}} or \code{\link[base:lapply]{base::vapply()}}.}

\item{moreArgs}{passed to argument \code{MoreArgs} of \code{\link[base:mapply]{base::mapply()}}.}

\item{x}{passed to argument \code{X} of \code{\link[base:lapply]{base::vapply()}}.}

\item{lhs, rhs}{any \R object.}
}
\value{
\itemize{
\item \code{\link[=stopf]{stopf()}} returns nothing. It is used for its side-effect.
\item \code{\link[=map]{map()}} returns a list having the same length as values passed to \code{...}
\item \code{\link[=vapply1i]{vapply1i()}} returns an integer vector having the same length as \code{x}.
\item \code{\link[=vapply1c]{vapply1c()}} returns a character vector having the same length as \code{x}.
\item \code{\link[=stopf]{\%||\%}} returns \code{rhs} if and only if \code{lhs} is \code{NULL}. Else,
\code{lhs} is returned.
}
}
\description{
Utility functions wrapping and/or combining further functions. They should
not be used by end users. This documentation is intended for developers.
}
\details{
\code{\link[=stopf]{\%||\%}} is the usual null coalescing operator. It returns its
right hand-side whenever its left hand-side is \code{NULL}. It is used to enforce
default values.
\subsection{Throw errors}{

\code{\link[=stopf]{stopf()}} combines \code{\link[base:sprintf]{base::sprintf()}} and \code{\link[base:stop]{base::stop()}}.
}

\subsection{Traverse functions}{

\code{\link[=map]{map()}}, \code{\link[=vapply1i]{vapply1i()}}, and \code{\link[=vapply1c]{vapply1c()}} respectively wrap \code{\link[base:mapply]{base::.mapply()}}
and \code{\link[base:lapply]{base::vapply()}}. Their purpose is to enforce specific arguments.
}
}
\author{
Jean-Mathieu Potvin (\href{mailto:jeanmathieupotvin@ununoctium.dev}{jeanmathieupotvin@ununoctium.dev})
}
\keyword{internal}
